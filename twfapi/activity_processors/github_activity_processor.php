<<<<<<< HEAD
<?php

// This file is generated by Composer
//require_once '../vendor/autoload.php';
require_once '../../vendor/autoload.php';


//Get all the repository information (Not sure if we need it)
//$repositories = $client->api('user')->repositories('TeamWorkFlo');
//print_r($repositories);


$client = new \Github\Client();
$commits = $client->api('repo')->commits()->all('TeamWorkFlo', 'teamworkflo', array('sha' => 'master'));
echo json_encode($commits);

function getBranches(){
$client = new \Github\Client();
$branches = $client->api('repo')->branches('TeamWorkFlo', 'teamworkflo');
//print_r($branches);
return json_encode($branches);
}


function getCommitsFromBranch($branch_name){
//Get all commits from a particular branch in this case master.
$client = new \Github\Client();
$commits = $client->api('repo')->commits()->all('TeamWorkFlo', 'teamworkflo', array('sha' => $branch_name));
//print_r($commits);
return json_encode($commits);
}





?>
=======
	<?php

	// This file is generated by Composer
	require_once '../vendor/autoload.php';
	//require_once '../../vendor/autoload.php';

	date_default_timezone_set('UTC');


	function getTaskID($commit_message){
		$merging_id = '-1';
		if (strpos($commit_message, '/') !== false) {
			$task_id = explode("/", $commit_message);
			if(is_numeric($task_id[0])){
				return $task_id[0];
			}else{
				return $merging_id;
			}
		}else{
			return  $merging_id;
		}
	}

	function getBranches(){
		$client = new \Github\Client();
		$branches = $client->api('repo')->branches('TeamWorkFlo', 'teamworkflo');
		return $branches;
	}


	function getCommitsFromBranch($branch_name){
		$client = new \Github\Client();
		$committs = $client->api('repo')->commits()->all('TeamWorkFlo', 'teamworkflo', array('sha' => $branch_name));
		return json_encode($committs);
	}


	function getGithubActivities(){
		$branches = getBranches();
		$activities_array = array();

		foreach($branches as $branch){
			$committs = json_decode(getCommitsFromBranch($branch['name']),true);


			foreach($committs as $commit){
				$commit = $commit['commit'];
				$message = $commit['message'];
				$author = $commit['author'];
				$task_id = getTaskID($message);

				if($task_id!='-1'){
				$activity_array = array();
				$activity_array['actor'] = $author['name']; 
				$activity_array['timestamp'] = strtotime($author['date']); 
				$activity_array['taskid'] = $task_id;
				$activity_array['source'] = 'github';
				//$activity_array['message'] = $message;

				
				array_push($activities_array, $activity_array);
				}

			}

		}

		return json_encode($activities_array);

	}





	?>

>>>>>>> task/47-githubprocessor
